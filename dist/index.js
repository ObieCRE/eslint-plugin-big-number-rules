/*
 * eslint-plugin-big-number-rules
 * v1.7.6
 * https://github.com/shuckster/eslint-plugin-big-number-rules
 * License: MIT
 */
"use strict";var e,t=Object.defineProperty,r=Object.getOwnPropertyDescriptor,n=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,i=(e="undefined"!=typeof WeakMap?new WeakMap:0,(i,o)=>e&&e.get(i)||(o=((e,i,o,s)=>{if(i&&"object"==typeof i||"function"==typeof i)for(let c of n(i))!a.call(e,c)&&(o||"default"!==c)&&t(e,c,{get:()=>i[c],enumerable:!(s=r(i,c))||s.enumerable});return e})((e=>t(e,"__esModule",{value:!0}))({}),i,1),e&&e.set(i,o),o)),o={};((e,r)=>{for(var n in r)t(e,n,{get:r[n],enumerable:!0})})(o,{against:()=>$,allOf:()=>S,anyOf:()=>C,defined:()=>I,empty:()=>w,endsWith:()=>D,falsy:()=>U,gt:()=>T,gte:()=>j,hasOwn:()=>M,inRange:()=>R,includedIn:()=>F,includes:()=>k,instanceOf:()=>u,isArray:()=>p,isDate:()=>m,isFunction:()=>g,isNumber:()=>y,isPojo:()=>h,isRegExp:()=>d,isString:()=>f,lt:()=>v,lte:()=>B,match:()=>b,not:()=>E,otherwise:()=>x,pluck:()=>O,spread:()=>q,startsWith:()=>A,truthy:()=>G,when:()=>_});var s=Object.prototype,c=s.toString,l=e=>t=>typeof t===e,u=e=>t=>t instanceof e,{isArray:p}=Array,m=e=>u(Date)(e)&&!isNaN(e),g=l("function"),f=l("string"),y=e=>e==e&&l("number")(e),d=u(RegExp),h=e=>!(null===e||!(e=>null!==e&&l("object")(e))(e)||(e=>"[object Arguments]"===c.call(e))(e))&&Object.getPrototypeOf(e)===s;function b(e){return(...t)=>$(...t)(e)}var $=(...e)=>{let t;return r=>e.find((e=>{let n=e(r),{matched:a,value:i}=n||{};return[a,i].every(g)?a(r)&&(t=i(r),!0):n&&(t=n)}))&&t},x=e=>t=>({matched:()=>!0,value:()=>g(e)?e(t):e}),_=e=>t=>r=>({matched:()=>N(e,r,(e=>r=e)),value:()=>g(t)?f(r)&&d(e)?t(r.match(e)):t(r):t}),N=(e,t,r)=>h(e)?Object.keys(e).every((n=>N(e[n],null==t?void 0:t[n],r))):p(e)?p(t)?e.length===t.length&&e.every(((e,n)=>N(e,null==t?void 0:t[n],r))):e.some((e=>N(e,t,r))):g(e)?e(t,r):f(t)&&d(e)?e.test(t):e===t||[e,t].every(Number.isNaN),O=(...e)=>(t,r)=>!(0!==e.length&&!(g(e[0])?e[0](t):N(e[0],t,r)))&&(r(t),!0),E=e=>(t,r)=>!N(e,t,r),C=(...e)=>e.flat(),S=(...e)=>(t,r)=>e.flat().every((e=>N(e,t,r))),w=e=>e!=e||!e&&0!==e&&!1!==e||p(e)&&!e.length||h(e)&&!Object.keys(e).length,I=e=>!w(e),T=e=>P((t=>t>e)),v=e=>P((t=>t<e)),j=e=>P((t=>t>=e)),B=e=>P((t=>t<=e)),R=(e,t)=>P((r=>r>=e&&r<=t)),A=e=>L((t=>t.startsWith(e))),D=e=>L((t=>t.endsWith(e))),k=e=>W((t=>t.includes(e))),F=C,M=(...e)=>t=>h(t)&&(([e,t])=>e.length&&e.every((e=>t.includes(e))))([e.flat(),Object.keys(t)]),G=e=>!!e,U=e=>!e,q=e=>new Proxy({},{get:()=>e}),L=e=>t=>f(t)&&e(t),P=e=>t=>y(t)&&e(t),W=e=>t=>(p(t)||f(t))&&e(t),J=i(o);const{isPojo:V}=J;function H(e="construct",t="BigNumber"){return r=>{const{settings:n}=r,a=n["big-number-rules"]?.[e]??t;return V(t)&&V(a)&&t!==a?{...t,...a}:a}}const z=H("construct","BigNumber"),K=H("importDeclaration","__IGNORE__");var Q={makeSettingGetter:H,isPojo:V,getConstruct:z,getImportDeclaration:K};const{match:X,when:Y,otherwise:Z,isString:ee,anyOf:te}=J,{getConstruct:re,getImportDeclaration:ne}=Q;function ae(e){return"Identifier"===e?.type&&"CallExpression"===e?.parent?.type&&e?.parent?.callee===e}function ie(e){return(t,r)=>{if(ae(r))return!1;const n=function(e){return X(e)(Y({type:"Identifier",parent:{type:"MemberExpression",object:te({type:"Identifier",name:ee},{type:"CallExpression",callee:{name:ee}})}})((({parent:{object:e}})=>X(e)(Y({type:"Identifier"})((e=>e.name)),Y({type:"CallExpression"})((e=>e.callee.name)),Z(null)))),Z(null))}(r);if(null===n)return!1;return e.replace("__CONSTRUCT__",re(t))===n}}const oe=ie("__CONSTRUCT__");var se={IdentifierIsAlreadyBigNumberMethod:oe,makeIdentifierMembershipDetector:ie,makeGlobalIdentifierFixer:function(e){const t={},r=[];return Object.keys(e).forEach((e=>{if(e.includes(".")){const[r,n]=e.split(".");t[n]=ie(r)}else r.push(e)})),n=>a=>{if(oe(n,a))return;const i=n.getSource(a);if(r.includes(a.name)&&ae(a))return void n.report({node:a,message:`is '${i}' a financial calculation?`,fix:t=>{const r=e[a.name];return t.replaceText(a,r(n))}});const o=t[a.name];"function"==typeof o&&o(n,a)&&n.report({node:a.parent,message:`is '${i}' a financial calculation?`,fix:t=>{const r=e[a.name];return t.replaceText(a.parent,r(n))}})}},withImportDeclaration:function(e,t){const r=ne(e);return"__IGNORE__"===r?t:n=>{const[a]=e.getAncestors(),i=a?.body?.find((e=>"ImportDeclaration"===e?.type&&e?.source?.value===r));if(i)return t(n)}},StringFromArguments:function(e){return t=>t.arguments.map((t=>e.getSource(t))).join(", ")}};const{match:ce,when:le,against:ue,otherwise:pe,not:me,allOf:ge}=J,{makeSettingGetter:fe,getConstruct:ye}=Q,{withImportDeclaration:de}=se,he=e=>Array.isArray(e)&&[3,4].includes(e.length),be=fe("arithmetic",{"+":"plus","-":"minus","/":"dividedBy","*":"multipliedBy","**":"exponentiatedBy","%":"modulo"}),$e=fe("comparison",{"<":"isLessThan","<=":"isLessThanOrEqualTo","===":"isEqualTo","==":"isEqualTo","!==":["__NEGATION__","${L}","isEqualTo","${R}"],"!=":["__NEGATION__","${L}","isEqualTo","${R}"],">=":"isGreaterThanOrEqualTo",">":"isGreaterThan"}),xe=fe("bitwise",{">>":"shiftedBy",">>>":"shiftedBy","<<":["${L}","shiftedBy","-${R}"]}),_e=fe("sum","sum"),Ne=fe("supportsSum",!0),Oe=fe("supportsBitwise",!0),Ee=[];function Ce(e){const t=ye(e),r=Oe(e),n={...be(e),...$e(e)},a=Object.keys(n),i=xe(e),o=Object.keys(i),s={...n,...i},c=me(ge(je,Be)),l=u;return ue(le({type:"BinaryExpression",operator:a,left:c,right:c})(l),le({type:"BinaryExpression",operator:o,left:c,right:c})((function(n){if(r)return u(n);const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})})));function u(r){const n=e.getSource(r),a=Ne(e)&&we(r),i=function(e,t){let r=t;for(;!ve(e,r);){if(!Te(r))return!1;r=r.callee.object}return!0}(e,r.left);Ee.push({node:r,original:n,summable:a&&!i,report:{node:r,message:`is '${n}' a financial calculation?`,fix:n=>{const{operator:a}=r,o=e.getSource(r.left),c=e.getSource(r.right),[l,u,p,m]=ce(s[a])(le(he)((e=>{const r=e.map((e=>e.replace("__CONSTRUCT__",t).replace("${L}",o).replace("${R}",c)));3===r.length&&r.unshift("");const[n,...a]=r;return["__NEGATION__"===n,...a]})),pe((e=>["",o,e,c]))),g=l?"!":"";return n.replaceText(r,i?`${g}${o}.${p}(${m})`:`${g}${t}(${u}).${p}(${m})`)}}})}}function Se(e){return t=>{if(r=t,!Ee.find((({node:e})=>e===r)))return;var r;const{node:n,original:a,summable:i,report:o}=Ee.pop();i?function(){if(!Ee.length)return!1;return Ee[Ee.length-1]?.summable??!1}()||e.report({node:n,message:`is '${a}' a financial calculation?`,fix:t=>{const r=Ie(e,n).join(", ");return t.replaceText(n,`${ye(e)}.${_e(e)}(${r})`)}}):e.report(o)}}function we(e){try{if("BinaryExpression"!==e.type)return!0;if("+"!==e.operator)throw new Error("not a +");return we(e.left)&&we(e.right)}catch(e){return!1}}function Ie(e,t){return"BinaryExpression"!==t.type?[e.getSource(t)]:[...Ie(e,t.left),...Ie(e,t.right)].flat()}function Te(e){return"CallExpression"===e?.type&&"MemberExpression"===e?.callee?.type}function ve(e,t){return function(e,t){return"CallExpression"===t?.type&&"Identifier"===t?.callee?.type&&t?.callee?.name===ye(e)}(e,t)||function(e,t){return Te(t)&&"Identifier"===t?.callee?.object?.type&&t?.callee?.object?.name===ye(e)&&"Identifier"===t?.callee?.property?.type&&t?.callee?.property?.name===_e(e)}(e,t)}function je(e){const{type:t,value:r}=e||{};return"Literal"===t&&isNaN(r)}function Be(e){return"MemberExpression"===e?.type&&"Identifier"===e?.property?.type&&"length"===e?.property?.name}var Re={create:e=>({BinaryExpression:de(e,Ce(e)),"BinaryExpression:exit":de(e,Se(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript arithmetic with BigNumber methods",fixable:"code"}};const{against:Ae,when:De,not:ke,match:Fe,otherwise:Me}=J,{makeSettingGetter:Ge,getConstruct:Ue}=Q,{withImportDeclaration:qe}=se,Le={"+=":"plus","-=":"minus","/=":"dividedBy","*=":"multipliedBy","**=":"exponentiatedBy","%=":"modulo"},Pe={">>=":"shiftedBy",">>>=":"shiftedBy","<<=":["${L}","shiftedBy","-${R}"]},We=e=>Array.isArray(e)&&3===e.length,Je=Ge("assignment",{...Le,...Pe}),Ve=Ge("supportsBitwise",!0);function He(e){const t=Ue(e),r=Je(e),n=Object.keys(Le),a=Object.keys(Pe),i=Ve(e),o=ke({type:"Identifier",name:t}),s=c;return Ae(De({type:"AssignmentExpression",operator:n,left:o})(s),De({type:"AssignmentExpression",operator:a,left:o})((function(r){if(i)return c(r);const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})})));function c(n){const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:a=>{const i=e.getSource(n.left),o=e.getSource(n.right),[s,c,l]=Fe(r[n.operator])(De(We)((e=>e.map((e=>e.replace("__CONSTRUCT__",t).replace("${L}",i).replace("${R}",o))))),Me((e=>[i,e,o])));return a.replaceText(n,`${s} = ${t}(${s}).${c}(${l})`)}})}}var ze={create:e=>({AssignmentExpression:qe(e,He(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript assignment-expressions with BigNumber equivalents",fixable:"code"}};const{against:Ke,when:Qe}=J,{getConstruct:Xe}=Q,{withImportDeclaration:Ye,StringFromArguments:Ze}=se;function et(e){return Ke(Qe({type:"CallExpression",callee:{type:"Identifier",name:"isNaN"}})(t),Qe({type:"CallExpression",callee:{type:"MemberExpression",object:{type:"Identifier",name:"Number"},property:{type:"Identifier",name:"isNaN"}}})(t));function t(t){const r=e.getSource(t);e.report({node:t,message:`is '${r}' a financial calculation?`,fix:r=>{const n=Xe(e),a=Ze(e)(t);return r.replaceText(t,`${n}(${a}).isNaN()`)}})}}var tt={create:e=>({CallExpression:Ye(e,et(e))}),meta:{category:"Financial, Currency",description:"Replace isNaN with BigNumber equivalent",fixable:"code"}};const{match:rt,when:nt,against:at,otherwise:it}=J,{makeSettingGetter:ot,getConstruct:st}=Q,{withImportDeclaration:ct,StringFromArguments:lt}=se,ut=ot("math",{min:"minimum",max:"maximum",random:"random",abs:"absoluteValue",sign:["__CONSTRUCT__(${A}).comparedTo(0)"],sqrt:"squareRoot"});function pt(e){const t=ut(e),r=Object.keys(t);return at(nt({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:r}}})((function(r){const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation?`,fix:n=>{const a=st(e),i=r.callee.property.name,o=lt(e)(r);return n.replaceText(r,rt(t[i])(nt({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",o))),nt({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",o)));return`${a}.${t}(${r})`})),it((e=>`${a}.${e}(${o})`))))}})})))}var mt={create:e=>({CallExpression:ct(e,pt(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Math methods with BigNumber equivalents",fixable:"code"}};const{match:gt,when:ft,against:yt,otherwise:dt}=J,{makeSettingGetter:ht,getConstruct:bt}=Q,{IdentifierIsAlreadyBigNumberMethod:$t,withImportDeclaration:xt,StringFromArguments:_t}=se,Nt=ht("number",{parseFloat:["__CONSTRUCT__(${A})"],toExponential:"toExponential",toFixed:"decimalPlaces",toPrecision:"toPrecision",toString:"toString"});function Ot(e){const t=Nt(e),r=Object.keys(t);return yt(ft({type:"CallExpression",callee:{type:"MemberExpression",property:{type:"Identifier",name:r}}})((function(r){const{property:n,object:a}=r.callee;if($t(e,n))return;const i=e.getSource(r);e.report({node:r,message:`is '${i}' a financial calculation?`,fix:i=>{const o=bt(e),s=e.getSource(a),c=_t(e)(r);return i.replaceText(r,gt({node:r,method:t[n.name]})(ft({node:{callee:{object:{name:"Number"}}},method:Array.isArray})((({method:e})=>e[0].replace("__CONSTRUCT__",o).replace("${O}",s).replace("${A}",c))),dt((({method:e})=>`${o}(${s}).${e}(${c})`))))}})})))}var Et={create:e=>({CallExpression:xt(e,Ot(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Number.prototype methods with BigNumber equivalents",fixable:"code"}};const{getConstruct:Ct}=Q,{makeGlobalIdentifierFixer:St,withImportDeclaration:wt}=se,It=St({parseFloat:e=>Ct(e)});var Tt={create:e=>({Identifier:wt(e,It(e))}),meta:{category:"Financial, Currency",description:"Replace parseFloat with BigNumber equivalent",fixable:"code"}};const{against:vt,when:jt,match:Bt,otherwise:Rt}=J,{makeSettingGetter:At,getConstruct:Dt}=Q,{withImportDeclaration:kt}=se,Ft={floor:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n})",ceil:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\n})",round:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_HALF_EVEN\n})"},Mt=At("supportsRound",!1),Gt=At("rounding",Ft);function Ut(e){const t=Object.keys(Ft),r=Gt(e),n=Mt(e);return vt(jt({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:t}}})((function(t){const a=e.getSource(t),i=t.callee.property.name;if(!n)return void e.report({node:t,message:`is '${a}' a financial calculation? If so, use the global constructor setting:\n\n${r[i]}\n`});e.report({node:t,message:`is '${a}' a financial calculation?`,fix:n=>{const a=Dt(e),o=r[i],s=t.arguments.map((t=>e.getSource(t))).join(", ");return n.replaceText(t,Bt(o)(jt({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",s))),jt({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",s)));return`${a}.${t}(${r})`})),Rt((e=>`${a}.${e}(${s})`))))}})})))}function qt(e){const t=Gt(e),r=Mt(e);return vt(jt({type:"UnaryExpression",operator:"~",argument:{operator:"~"}})((function(n){const a=e.getSource(n),i=t.floor;if(!r)return void e.report({node:n,message:`is '${a}' a financial calculation? If so, use the global constructor setting:\n\n${i}\n`});e.report({node:n,message:`is '${a}' a financial calculation?`,fix:t=>{const r=e.getSource(n?.argument?.argument),a=Dt(e);return t.replaceText(n,Bt(i)(jt({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",r))),jt({length:2})((e=>{const t=e[0],n=e.slice(1).map((e=>e.replace("${A}",r)));return`${a}.${t}(${n})`})),Rt((e=>`${a}.${e}(${r})`))))}})})))}var Lt={rules:{arithmetic:Re,assignment:ze,isNaN:tt,math:mt,number:Et,parseFloat:Tt,rounding:{create:e=>({CallExpression:kt(e,Ut(e)),UnaryExpression:kt(e,qt(e))}),meta:{category:"Financial, Currency",description:"Warn against using JavaScript Math.round|ceil|floor methods, or offer replacements",fixable:"code"}}},configs:{recommended:{rules:{"big-number-rules/arithmetic":"warn","big-number-rules/assignment":"warn","big-number-rules/isNaN":"warn","big-number-rules/math":"warn","big-number-rules/number":"warn","big-number-rules/parseFloat":"warn","big-number-rules/rounding":"warn"}}}};module.exports=Lt;
