/*
 * eslint-plugin-big-number-rules
 * v1.5.5
 * https://github.com/shuckster/eslint-plugin-big-number-rules
 * License: MIT
 */
"use strict";var e={isPojo:function(e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype}};const{isPojo:t}=e;function r(e="construct",r="BigNumber"){return n=>{const{settings:i}=n,o=i["big-number-rules"]?.[e]??r;return t(r)&&t(o)&&r!==o?{...r,...o}:o}}const n=r("construct","BigNumber");var i={makeSettingGetter:r,isPojo:t,getConstruct:n};const{makeSettingGetter:o,getConstruct:a}=i,c=o("arithmetic",{"+":"plus","-":"minus","/":"dividedBy","*":"multipliedBy","**":"exponentiatedBy","%":"modulo"}),s=o("comparison",{"<":"isLessThan","<=":"isLessThanOrEqualTo","===":"isEqualTo","==":"isEqualTo",">=":"isGreaterThanOrEqualTo",">":"isGreaterThan"}),u=o("bitwise",{">>":"shiftedBy",">>>":"shiftedBy","<<":["${L}","shiftedBy","-${R}"]}),l=o("sum","sum"),p=o("supportsSum",!0),f=o("supportsBitwise",!0);function m(e){return"CallExpression"===e?.type&&"MemberExpression"===e?.callee?.type}function g(e,t){return function(e,t){return"CallExpression"===t?.type&&"Identifier"===t?.callee?.type&&t?.callee?.name===a(e)}(e,t)||function(e,t){return m(t)&&"Identifier"===t?.callee?.object?.type&&t?.callee?.object?.name===a(e)&&"Identifier"===t?.callee?.property?.type&&t?.callee?.property?.name===l(e)}(e,t)}const d=[];function y(e){try{if("BinaryExpression"!==e.type)return!0;if("+"!==e.operator)throw new Error("not a +");return y(e.left)&&y(e.right)}catch(e){return!1}}function b(e){const t=f(e),r={...c(e),...s(e)},n=Object.keys(r),i=u(e),o=Object.keys(i),l={...r,...i};function b(t,r,n){const i=l[r];return(function(e){return Array.isArray(e)&&3===e.length&&e.every((e=>"string"==typeof e))}(i)?function(t){return(r,n)=>t.map((t=>t.replace("__CONSTRUCT__",a(e)).replace("${L}",r).replace("${R}",n)))}(i):(e,t)=>[e,i,t])(t,n)}function $(e){const{type:t,value:r}=e||{};return"Literal"===t&&isNaN(r)}function h(e){return"MemberExpression"===e?.type&&"Identifier"===e?.property?.type&&"length"===e?.property?.name}return r=>{const i=n.includes(r.operator);if(i){const{left:e,right:t}=r;if($(e)||$(t))return;if(h(e)||h(t))return}const c=o.includes(r.operator);if(!i&&!c)return;const s=e.getSource(r);if(c&&!t){const t=a(e);return void e.report({node:r,message:`is '${s}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})}const u=p(e)&&y(r),l=function(e,t){let r=t;for(;!g(e,r);){if(!m(r))return!1;r=r.callee.object}return!0}(e,r.left);d.push({node:r,original:s,summable:u&&!l,report:{node:r,message:`is '${s}' a financial calculation?`,fix:t=>{const{operator:n,left:i,right:o}=r,c=e.getSource(i),s=e.getSource(o);return l?t.replaceText(r,function(e,t,r){const[,n,i]=b(e,t,r);return`${e}.${n}(${i})`}(c,n,s)):t.replaceText(r,function(e,t,r,n){const i=a(e),[o,c,s]=b(t,r,n);return`${i}(${o}).${c}(${s})`}(e,c,n,s))}}})}}function $(e,t){return"BinaryExpression"!==t.type?[e.getSource(t)]:[...$(e,t.left),...$(e,t.right)].flat()}function h(e,t){const r=$(e,t).join(", ");return`${a(e)}.${l(e)}(${r})`}function x(e){return t=>{if(r=t,!d.find((({node:e})=>e===r)))return;var r;const{node:n,original:i,summable:o,report:a}=d.pop();o?d.length&&d[d.length-1]?.summable||e.report({node:n,message:`is '${i}' a financial calculation?`,fix:t=>t.replaceText(n,h(e,n))}):e.report(a)}}var N={create:e=>({BinaryExpression:b(e),"BinaryExpression:exit":x(e)}),meta:{category:"Financial, Currency",description:"Replace JavaScript arithmetic with BigNumber methods",fixable:"code"}};const{makeSettingGetter:_,getConstruct:C}=i,S={">>=":"shiftedBy",">>>=":"shiftedBy","<<=":["${L}","shiftedBy","-${R}"]},T=_("assignment",{"+=":"plus","-=":"minus","/=":"dividedBy","*=":"multipliedBy","**=":"exponentiatedBy","%=":"modulo",...S}),O=_("supportsBitwise",!0);function B(e){const t=O(e),r=T(e),n=Object.keys(r),i=Object.keys(S);function o(t,n,i){const o=r[n];return(function(e){return Array.isArray(e)&&3===e.length&&e.every((e=>"string"==typeof e))}(o)?function(t){return(r,n)=>t.map((t=>t.replace("__CONSTRUCT__",C(e)).replace("${L}",r).replace("${R}",n)))}(o):(e,t)=>[e,o,t])(t,i)}return r=>{if(!n.includes(r.operator))return;const a=i.includes(r.operator),c=e.getSource(r);if(a&&!t){const t=C(e);return void e.report({node:r,message:`is '${c}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})}const s=C(e);"Identifier"!==r?.left?.type&&r?.left?.name===s||e.report({node:r,message:`is '${c}' a financial calculation?`,fix:t=>{const{operator:n,left:i,right:a}=r,c=e.getSource(i),s=e.getSource(a);return t.replaceText(r,function(e,t,r,n){const i=C(e),[a,c,s]=o(t,r,n);return`${a} = ${i}(${a}).${c}(${s})`}(e,c,n,s))}})}}var E={create:e=>({AssignmentExpression:B(e)}),meta:{category:"Financial, Currency",description:"Replace JavaScript assignment-expressions with BigNumber equivalents",fixable:"code"}};const{getConstruct:j}=i;function R(e){return(t,r)=>{const n=r.parent;if("MemberExpression"!==n.type)return!1;const i=e.replace("__CONSTRUCT__",j(t));return"CallExpression"===n?.object?.type&&"Identifier"===n?.object?.callee?.type&&n?.object?.callee?.name===i||"Identifier"===n?.object?.type&&n?.object?.name===i}}const v=R("__CONSTRUCT__");var I={IdentifierIsAlreadyBigNumberMethod:v,makeIdentifierMembershipDetector:R,makeGlobalIdentifierFixer:function(e){const t=Object.keys(e);return r=>n=>{if(!t.includes(n.name))return;if(v(r,n))return;const i=r.getSource(n);r.report({node:n,message:`is '${i}' a financial calculation?`,fix:t=>{const i=e[n.name];return t.replaceText(n,i(r))}})}}};const{getConstruct:A}=i,{makeGlobalIdentifierFixer:w}=I,k=w({isNaN:e=>`${A(e)}.isNaN`});var F={create:e=>({Identifier:k(e)}),meta:{category:"Financial, Currency",description:"Replace isNaN with BigNumber equivalent",fixable:"code"}};const{makeSettingGetter:U,getConstruct:M}=i,G=U("math",{min:"minimum",max:"maximum",random:"random",abs:"absoluteValue",sign:["__CONSTRUCT__(${A}).comparedTo(0)"],sqrt:"squareRoot"});function q(e){const t=G(e),r=Object.keys(t);return n=>{const{callee:i}=n;if("MemberExpression"!==i.type)return;if("Math"!==i?.object?.name)return;const o=i?.property?.name;if(!r.includes(o))return;const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r,n){const i=t[n],o=r.arguments.map((t=>e.getSource(t))).join(", "),a=M(e);if(Array.isArray(i)){if(1===i.length)return i[0].replace("__CONSTRUCT__",a).replace("${A}",o);if(2===i.length)return`${a}.${i[0]}(${i.slice(1).map((e=>e.replace("${A}",o)))})`}return`${a}.${i}(${o})`}(e,n,o))})}}var D={create:e=>({CallExpression:q(e)}),meta:{category:"Financial, Currency",description:"Replace JavaScript Math methods with BigNumber equivalents",fixable:"code"}};const{makeSettingGetter:L,getConstruct:P}=i,{IdentifierIsAlreadyBigNumberMethod:J}=I,V=L("number",{parseFloat:["__CONSTRUCT__(${A})"],toExponential:"toExponential",toFixed:"decimalPlaces",toPrecision:"toPrecision",toString:"toString"});function H(e){const t=V(e),r=Object.keys(t);return n=>{const{callee:i}=n;if("MemberExpression"!==i.type)return;if("Identifier"!==i?.property?.type)return;const o=i?.property?.name;if(!r.includes(o))return;if(J(e,i?.property))return;const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r,n){const i=t[n],o=r.arguments.map((t=>e.getSource(t))).join(", "),a=P(e),c=e.getSource(r?.callee?.object);return"Number"===r?.callee?.object?.name&&Array.isArray(i)&&1===i.length?i[0].replace("__CONSTRUCT__",a).replace("${O}",c).replace("${A}",o):`${a}(${c}).${i}(${o})`}(e,n,o))})}}var W={create:e=>({CallExpression:H(e)}),meta:{category:"Financial, Currency",description:"Replace JavaScript Number.prototype methods with BigNumber equivalents",fixable:"code"}};const{getConstruct:z}=i,{makeGlobalIdentifierFixer:K}=I,Q=K({parseFloat:e=>z(e)});var X={create:e=>({Identifier:Q(e)}),meta:{category:"Financial, Currency",description:"Replace parseFloat with BigNumber equivalent",fixable:"code"}};const{makeSettingGetter:Y,getConstruct:Z}=i,ee={floor:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n})",ceil:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\n})",round:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_HALF_EVEN\n})"},te=Y("supportsRound",!1),re=Y("rounding",ee);function ne(e){const t=Object.keys(ee),r=re(e),n=te(e);return i=>{const{callee:o}=i;if("MemberExpression"!==o.type)return;if("Math"!==o?.object?.name)return;const a=o?.property?.name;if(!t.includes(a))return;const c=e.getSource(i);n?e.report({node:i,message:`is '${c}' a financial calculation?`,fix:t=>t.replaceText(i,function(e,t,n){const i=r[n],o=t.arguments.map((t=>e.getSource(t))).join(", "),a=Z(e);if(Array.isArray(i)){if(1===i.length)return i[0].replace("__CONSTRUCT__",a).replace("${A}",o);if(2===i.length)return`${a}.${i[0]}(${i.slice(1).map((e=>e.replace("${A}",o)))})`}return`${a}.${i}(${o})`}(e,i,a))}):e.report({node:i,message:`is '${c}' a financial calculation? If so, use the global constructor setting:\n\n${r[a]}\n`})}}function ie(e){const t=re(e),r=te(e);return n=>{if("~"!==n?.operator)return;if("~"!==n?.argument?.operator)return;const i=e.getSource(n);r?e.report({node:n,message:`is '${i}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r){const n=t.floor,i=e.getSource(r?.argument?.argument),o=Z(e);if(Array.isArray(n)){if(1===n.length)return n[0].replace("__CONSTRUCT__",o).replace("${A}",i);if(2===n.length)return`${o}.${n[0]}(${n.slice(1).map((e=>e.replace("${A}",i)))})`}return`${o}.${n}(${i})`}(e,n))}):e.report({node:n,message:`is '${i}' a financial calculation? If so, use the global constructor setting:\n\n${t.floor}\n`})}}var oe={rules:{arithmetic:N,assignment:E,isNaN:F,math:D,number:W,parseFloat:X,rounding:{create:e=>({CallExpression:ne(e),UnaryExpression:ie(e)}),meta:{category:"Financial, Currency",description:"Warn against using JavaScript Math.round|ceil|floor methods, or offer replacements",fixable:"code"}}},configs:{recommended:{rules:{"big-number-rules/arithmetic":"warn","big-number-rules/assignment":"warn","big-number-rules/isNaN":"warn","big-number-rules/math":"warn","big-number-rules/number":"warn","big-number-rules/parseFloat":"warn","big-number-rules/rounding":"warn"}}}};module.exports=oe;
