/*
 * eslint-plugin-big-number-rules
 * v1.7.6
 * https://github.com/shuckster/eslint-plugin-big-number-rules
 * License: MIT
 */
"use strict";var e,t=Object.defineProperty,r=Object.getOwnPropertyDescriptor,n=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(e="undefined"!=typeof WeakMap?new WeakMap:0,(a,o)=>e&&e.get(a)||(o=((e,a,o,s)=>{if(a&&"object"==typeof a||"function"==typeof a)for(let c of n(a))!i.call(e,c)&&(o||"default"!==c)&&t(e,c,{get:()=>a[c],enumerable:!(s=r(a,c))||s.enumerable});return e})((e=>t(e,"__esModule",{value:!0}))({}),a,1),e&&e.set(a,o),o)),c={};((e,r)=>{for(var n in r)t(e,n,{get:r[n],enumerable:!0})})(c,{against:()=>_,allOf:()=>v,anyOf:()=>w,cata:()=>q,defined:()=>T,empty:()=>I,endsWith:()=>F,falsy:()=>L,gt:()=>j,gte:()=>R,hasOwn:()=>U,inRange:()=>D,includedIn:()=>G,includes:()=>M,instanceOf:()=>m,isArray:()=>g,isDate:()=>f,isFunction:()=>y,isNumber:()=>h,isPojo:()=>$,isRegExp:()=>b,isString:()=>d,lt:()=>B,lte:()=>A,match:()=>x,not:()=>S,otherwise:()=>N,pluck:()=>C,spread:()=>W,startsWith:()=>k,truthy:()=>P,when:()=>O});var l=Object.prototype,u=l.toString,p=e=>t=>typeof t===e,m=e=>t=>t instanceof e,{isArray:g}=Array,f=e=>m(Date)(e)&&!isNaN(e),y=p("function"),d=p("string"),h=e=>e==e&&p("number")(e),b=m(RegExp),$=e=>!(null===e||!(e=>null!==e&&p("object")(e))(e)||(e=>"[object Arguments]"===u.call(e))(e))&&Object.getPrototypeOf(e)===l;function x(e){return(...t)=>_(...t)(e)}var _=(...e)=>{let t;return r=>e.find((e=>{let n=e(r),{matched:a,value:i}=n||{};return[a,i].every(y)?a(r)&&(t=i(r),!0):n&&(t=n)}))&&t},N=e=>t=>({matched:()=>!0,value:()=>y(e)?e(t):e}),O=e=>t=>r=>({matched:()=>E(e,r,(e=>r=e)),value:()=>y(t)?d(r)&&b(e)?t(r.match(e)):t(r):t}),E=(e,t,r)=>$(e)?Object.keys(e).every((n=>E(e[n],null==t?void 0:t[n],r))):g(e)?g(t)?e.length===t.length&&e.every(((e,n)=>E(e,null==t?void 0:t[n],r))):e.some((e=>E(e,t,r))):y(e)?e(t,r):d(t)&&b(e)?e.test(t):e===t||[e,t].every(Number.isNaN),C=(...e)=>(t,r)=>!(0!==e.length&&!(y(e[0])?e[0](t):E(e[0],t,r)))&&(r(t),!0),S=e=>(t,r)=>!E(e,t,r),w=(...e)=>e.flat(),v=(...e)=>(t,r)=>e.flat().every((e=>E(e,t,r))),I=e=>e!=e||!e&&0!==e&&!1!==e||g(e)&&!e.length||$(e)&&!Object.keys(e).length,T=e=>!I(e),j=e=>V((t=>t>e)),B=e=>V((t=>t<e)),R=e=>V((t=>t>=e)),A=e=>V((t=>t<=e)),D=(e,t)=>V((r=>r>=e&&r<=t)),k=e=>J((t=>t.startsWith(e))),F=e=>J((t=>t.endsWith(e))),M=e=>H((t=>t.includes(e))),G=w,U=(...e)=>t=>$(t)&&(([e,t])=>e.length&&e.every((e=>t.includes(e))))([e.flat(),Object.keys(t)]),q=e=>{var t=e,{getValue:r}=t,n=((e,t)=>{var r={};for(var n in e)i.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&a)for(var n of a(e))t.indexOf(n)<0&&o.call(e,n)&&(r[n]=e[n]);return r})(t,["getValue"]);return Object.entries(n).reduce(((e,[t,n])=>Object.assign(e,{[t]:e=>t=>({matched:()=>n(t),value:()=>y(e)?e(r(t)):e})})),{})},P=e=>!!e,L=e=>!e,W=e=>new Proxy({},{get:()=>e}),J=e=>t=>d(t)&&e(t),V=e=>t=>h(t)&&e(t),H=e=>t=>(g(t)||d(t))&&e(t),z=s(c);const{isPojo:K}=z;function Q(e="construct",t="BigNumber"){return r=>{const{settings:n}=r,a=n["big-number-rules"]?.[e]??t;return K(t)&&K(a)&&t!==a?{...t,...a}:a}}const X=Q("construct","BigNumber"),Y=Q("importDeclaration","__IGNORE__");var Z={makeSettingGetter:Q,isPojo:K,getConstruct:X,getImportDeclaration:Y};const{match:ee,when:te,otherwise:re,isString:ne,anyOf:ae}=z,{getConstruct:ie,getImportDeclaration:oe}=Z;function se(e){return"Identifier"===e?.type&&"CallExpression"===e?.parent?.type&&e?.parent?.callee===e}function ce(e){return(t,r)=>{if(se(r))return!1;const n=function(e){return ee(e)(te({type:"Identifier",parent:{type:"MemberExpression",object:ae({type:"Identifier",name:ne},{type:"CallExpression",callee:{name:ne}})}})((({parent:{object:e}})=>ee(e)(te({type:"Identifier"})((e=>e.name)),te({type:"CallExpression"})((e=>e.callee.name)),re(null)))),re(null))}(r);if(null===n)return!1;return e.replace("__CONSTRUCT__",ie(t))===n}}const le=ce("__CONSTRUCT__");var ue={IdentifierIsAlreadyBigNumberMethod:le,makeIdentifierMembershipDetector:ce,makeGlobalIdentifierFixer:function(e){const t={},r=[];return Object.keys(e).forEach((e=>{if(e.includes(".")){const[r,n]=e.split(".");t[n]=ce(r)}else r.push(e)})),n=>a=>{if(le(n,a))return;const i=n.getSource(a);if(r.includes(a.name)&&se(a))return void n.report({node:a,message:`is '${i}' a financial calculation?`,fix:t=>{const r=e[a.name];return t.replaceText(a,r(n))}});const o=t[a.name];"function"==typeof o&&o(n,a)&&n.report({node:a.parent,message:`is '${i}' a financial calculation?`,fix:t=>{const r=e[a.name];return t.replaceText(a.parent,r(n))}})}},withImportDeclaration:function(e,t){const r=oe(e);return"__IGNORE__"===r?t:n=>{const[a]=e.getAncestors(),i=a?.body?.find((e=>"ImportDeclaration"===e?.type&&e?.source?.value===r));if(i)return t(n)}},StringFromArguments:function(e){return t=>t.arguments.map((t=>e.getSource(t))).join(", ")}};const{match:pe,when:me,against:ge,otherwise:fe,not:ye,allOf:de}=z,{makeSettingGetter:he,getConstruct:be}=Z,{withImportDeclaration:$e}=ue,xe=e=>Array.isArray(e)&&[3,4].includes(e.length),_e=he("arithmetic",{"+":"plus","-":"minus","/":"dividedBy","*":"multipliedBy","**":"exponentiatedBy","%":"modulo"}),Ne=he("comparison",{"<":"isLessThan","<=":"isLessThanOrEqualTo","===":"isEqualTo","==":"isEqualTo","!==":["__NEGATION__","${L}","isEqualTo","${R}"],"!=":["__NEGATION__","${L}","isEqualTo","${R}"],">=":"isGreaterThanOrEqualTo",">":"isGreaterThan"}),Oe=he("bitwise",{">>":"shiftedBy",">>>":"shiftedBy","<<":["${L}","shiftedBy","-${R}"]}),Ee=he("sum","sum"),Ce=he("supportsSum",!0),Se=he("supportsBitwise",!0),we=[];function ve(e){const t=be(e),r=Se(e),n={..._e(e),...Ne(e)},a=Object.keys(n),i=Oe(e),o=Object.keys(i),s={...n,...i},c=ye(de(Ae,De)),l=u;return ge(me({type:"BinaryExpression",operator:a,left:c,right:c})(l),me({type:"BinaryExpression",operator:o,left:c,right:c})((function(n){if(r)return u(n);const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})})));function u(r){const n=e.getSource(r),a=Ce(e)&&Te(r),i=function(e,t){let r=t;for(;!Re(e,r);){if(!Be(r))return!1;r=r.callee.object}return!0}(e,r.left);we.push({node:r,original:n,summable:a&&!i,report:{node:r,message:`is '${n}' a financial calculation?`,fix:n=>{const{operator:a}=r,o=e.getSource(r.left),c=e.getSource(r.right),[l,u,p,m]=pe(s[a])(me(xe)((e=>{const r=e.map((e=>e.replace("__CONSTRUCT__",t).replace("${L}",o).replace("${R}",c)));3===r.length&&r.unshift("");const[n,...a]=r;return["__NEGATION__"===n,...a]})),fe((e=>["",o,e,c]))),g=l?"!":"";return n.replaceText(r,i?`${g}${o}.${p}(${m})`:`${g}${t}(${u}).${p}(${m})`)}}})}}function Ie(e){return t=>{if(r=t,!we.find((({node:e})=>e===r)))return;var r;const{node:n,original:a,summable:i,report:o}=we.pop();i?function(){if(!we.length)return!1;return we[we.length-1]?.summable??!1}()||e.report({node:n,message:`is '${a}' a financial calculation?`,fix:t=>{const r=je(e,n).join(", ");return t.replaceText(n,`${be(e)}.${Ee(e)}(${r})`)}}):e.report(o)}}function Te(e){try{if("BinaryExpression"!==e.type)return!0;if("+"!==e.operator)throw new Error("not a +");return Te(e.left)&&Te(e.right)}catch(e){return!1}}function je(e,t){return"BinaryExpression"!==t.type?[e.getSource(t)]:[...je(e,t.left),...je(e,t.right)].flat()}function Be(e){return"CallExpression"===e?.type&&"MemberExpression"===e?.callee?.type}function Re(e,t){return function(e,t){return"CallExpression"===t?.type&&"Identifier"===t?.callee?.type&&t?.callee?.name===be(e)}(e,t)||function(e,t){return Be(t)&&"Identifier"===t?.callee?.object?.type&&t?.callee?.object?.name===be(e)&&"Identifier"===t?.callee?.property?.type&&t?.callee?.property?.name===Ee(e)}(e,t)}function Ae(e){const{type:t,value:r}=e||{};return"Literal"===t&&isNaN(r)}function De(e){return"MemberExpression"===e?.type&&"Identifier"===e?.property?.type&&"length"===e?.property?.name}var ke={create:e=>({BinaryExpression:$e(e,ve(e)),"BinaryExpression:exit":$e(e,Ie(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript arithmetic with BigNumber methods",fixable:"code"}};const{against:Fe,when:Me,not:Ge,match:Ue,otherwise:qe}=z,{makeSettingGetter:Pe,getConstruct:Le}=Z,{withImportDeclaration:We}=ue,Je={"+=":"plus","-=":"minus","/=":"dividedBy","*=":"multipliedBy","**=":"exponentiatedBy","%=":"modulo"},Ve={">>=":"shiftedBy",">>>=":"shiftedBy","<<=":["${L}","shiftedBy","-${R}"]},He=e=>Array.isArray(e)&&3===e.length,ze=Pe("assignment",{...Je,...Ve}),Ke=Pe("supportsBitwise",!0);function Qe(e){const t=Le(e),r=ze(e),n=Object.keys(Je),a=Object.keys(Ve),i=Ke(e),o=Ge({type:"Identifier",name:t}),s=c;return Fe(Me({type:"AssignmentExpression",operator:n,left:o})(s),Me({type:"AssignmentExpression",operator:a,left:o})((function(r){if(i)return c(r);const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})})));function c(n){const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:a=>{const i=e.getSource(n.left),o=e.getSource(n.right),[s,c,l]=Ue(r[n.operator])(Me(He)((e=>e.map((e=>e.replace("__CONSTRUCT__",t).replace("${L}",i).replace("${R}",o))))),qe((e=>[i,e,o])));return a.replaceText(n,`${s} = ${t}(${s}).${c}(${l})`)}})}}var Xe={create:e=>({AssignmentExpression:We(e,Qe(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript assignment-expressions with BigNumber equivalents",fixable:"code"}};const{against:Ye,when:Ze}=z,{getConstruct:et}=Z,{withImportDeclaration:tt,StringFromArguments:rt}=ue;function nt(e){return Ye(Ze({type:"CallExpression",callee:{type:"Identifier",name:"isNaN"}})(t),Ze({type:"CallExpression",callee:{type:"MemberExpression",object:{type:"Identifier",name:"Number"},property:{type:"Identifier",name:"isNaN"}}})(t));function t(t){const r=e.getSource(t);e.report({node:t,message:`is '${r}' a financial calculation?`,fix:r=>{const n=et(e),a=rt(e)(t);return r.replaceText(t,`${n}(${a}).isNaN()`)}})}}var at={create:e=>({CallExpression:tt(e,nt(e))}),meta:{category:"Financial, Currency",description:"Replace isNaN with BigNumber equivalent",fixable:"code"}};const{match:it,when:ot,against:st,otherwise:ct}=z,{makeSettingGetter:lt,getConstruct:ut}=Z,{withImportDeclaration:pt,StringFromArguments:mt}=ue,gt=lt("math",{min:"minimum",max:"maximum",random:"random",abs:"absoluteValue",sign:["__CONSTRUCT__(${A}).comparedTo(0)"],sqrt:"squareRoot"});function ft(e){const t=gt(e),r=Object.keys(t);return st(ot({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:r}}})((function(r){const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation?`,fix:n=>{const a=ut(e),i=r.callee.property.name,o=mt(e)(r);return n.replaceText(r,it(t[i])(ot({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",o))),ot({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",o)));return`${a}.${t}(${r})`})),ct((e=>`${a}.${e}(${o})`))))}})})))}var yt={create:e=>({CallExpression:pt(e,ft(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Math methods with BigNumber equivalents",fixable:"code"}};const{match:dt,when:ht,against:bt,otherwise:$t}=z,{makeSettingGetter:xt,getConstruct:_t}=Z,{IdentifierIsAlreadyBigNumberMethod:Nt,withImportDeclaration:Ot,StringFromArguments:Et}=ue,Ct=xt("number",{parseFloat:["__CONSTRUCT__(${A})"],toExponential:"toExponential",toFixed:"decimalPlaces",toPrecision:"toPrecision",toString:"toString"});function St(e){const t=Ct(e),r=Object.keys(t);return bt(ht({type:"CallExpression",callee:{type:"MemberExpression",property:{type:"Identifier",name:r}}})((function(r){const{property:n,object:a}=r.callee;if(Nt(e,n))return;const i=e.getSource(r);e.report({node:r,message:`is '${i}' a financial calculation?`,fix:i=>{const o=_t(e),s=e.getSource(a),c=Et(e)(r);return i.replaceText(r,dt({node:r,method:t[n.name]})(ht({node:{callee:{object:{name:"Number"}}},method:Array.isArray})((({method:e})=>e[0].replace("__CONSTRUCT__",o).replace("${O}",s).replace("${A}",c))),$t((({method:e})=>`${o}(${s}).${e}(${c})`))))}})})))}var wt={create:e=>({CallExpression:Ot(e,St(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Number.prototype methods with BigNumber equivalents",fixable:"code"}};const{getConstruct:vt}=Z,{makeGlobalIdentifierFixer:It,withImportDeclaration:Tt}=ue,jt=It({parseFloat:e=>vt(e)});var Bt={create:e=>({Identifier:Tt(e,jt(e))}),meta:{category:"Financial, Currency",description:"Replace parseFloat with BigNumber equivalent",fixable:"code"}};const{against:Rt,when:At,match:Dt,otherwise:kt}=z,{makeSettingGetter:Ft,getConstruct:Mt}=Z,{withImportDeclaration:Gt}=ue,Ut={floor:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n})",ceil:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\n})",round:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_HALF_EVEN\n})"},qt=Ft("supportsRound",!1),Pt=Ft("rounding",Ut);function Lt(e){const t=Object.keys(Ut),r=Pt(e),n=qt(e);return Rt(At({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:t}}})((function(t){const a=e.getSource(t),i=t.callee.property.name;if(!n)return void e.report({node:t,message:`is '${a}' a financial calculation? If so, use the global constructor setting:\n\n${r[i]}\n`});e.report({node:t,message:`is '${a}' a financial calculation?`,fix:n=>{const a=Mt(e),o=r[i],s=t.arguments.map((t=>e.getSource(t))).join(", ");return n.replaceText(t,Dt(o)(At({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",s))),At({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",s)));return`${a}.${t}(${r})`})),kt((e=>`${a}.${e}(${s})`))))}})})))}function Wt(e){const t=Pt(e),r=qt(e);return Rt(At({type:"UnaryExpression",operator:"~",argument:{operator:"~"}})((function(n){const a=e.getSource(n),i=t.floor;if(!r)return void e.report({node:n,message:`is '${a}' a financial calculation? If so, use the global constructor setting:\n\n${i}\n`});e.report({node:n,message:`is '${a}' a financial calculation?`,fix:t=>{const r=e.getSource(n?.argument?.argument),a=Mt(e);return t.replaceText(n,Dt(i)(At({length:1})((e=>e[0].replace("__CONSTRUCT__",a).replace("${A}",r))),At({length:2})((e=>{const t=e[0],n=e.slice(1).map((e=>e.replace("${A}",r)));return`${a}.${t}(${n})`})),kt((e=>`${a}.${e}(${r})`))))}})})))}var Jt={rules:{arithmetic:ke,assignment:Xe,isNaN:at,math:yt,number:wt,parseFloat:Bt,rounding:{create:e=>({CallExpression:Gt(e,Lt(e)),UnaryExpression:Gt(e,Wt(e))}),meta:{category:"Financial, Currency",description:"Warn against using JavaScript Math.round|ceil|floor methods, or offer replacements",fixable:"code"}}},configs:{recommended:{rules:{"big-number-rules/arithmetic":"warn","big-number-rules/assignment":"warn","big-number-rules/isNaN":"warn","big-number-rules/math":"warn","big-number-rules/number":"warn","big-number-rules/parseFloat":"warn","big-number-rules/rounding":"warn"}}}};module.exports=Jt;
