/*
 * eslint-plugin-big-number-rules
 * v1.6.1
 * https://github.com/shuckster/eslint-plugin-big-number-rules
 * License: MIT
 */
"use strict";var e={isPojo:function(e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype}};const{isPojo:t}=e;function r(e="construct",r="BigNumber"){return n=>{const{settings:i}=n,o=i["big-number-rules"]?.[e]??r;return t(r)&&t(o)&&r!==o?{...r,...o}:o}}const n=r("construct","BigNumber"),i=r("importDeclaration","__IGNORE__");var o,a={makeSettingGetter:r,isPojo:t,getConstruct:n,getImportDeclaration:i},c={exports:{}};!function(e,t){var r=Object.defineProperty;((e,t)=>{for(var n in(e=>{r(e,"__esModule",{value:!0})})(e),t)r(e,n,{get:t[n],enumerable:!0})})(t,{against:()=>m,defined:()=>$,empty:()=>h,endsWith:()=>S,falsy:()=>E,gt:()=>x,gte:()=>_,inRange:()=>v,includes:()=>I,isArray:()=>a,isFunction:()=>c,isNumber:()=>s,isPojo:()=>p,isRegExp:()=>u,isString:()=>l,lt:()=>N,lte:()=>O,match:()=>f,otherwise:()=>g,spread:()=>j,startsWith:()=>C,truthy:()=>T,when:()=>d});var n=Object.prototype,i=n.toString,o=e=>typeof e,a=e=>Array.isArray(e),c=e=>"function"===o(e),s=e=>"number"===o(e),u=e=>e instanceof RegExp,l=e=>"string"===o(e),p=e=>!(null===e||!(e=>"object"===o(e)&&null!==e)(e)||(e=>"[object Arguments]"===i.call(e))(e))&&Object.getPrototypeOf(e)===n;function f(e){return(...t)=>m(...t)(e)}function m(...e){let t;return r=>e.find((e=>{let n=e(r),{matched:i,value:o}=n||{};return[i,o].every(c)?i(r)&&(t=o(r),!0):n&&(t=n)}))&&t}var g=e=>t=>({matched:()=>!0,value:()=>c(e)?e(t):e}),d=e=>t=>r=>({matched:()=>y(e,r),value:()=>c(t)?l(r)&&u(e)?t(r.match(e)):t(r):t}),y=(e,t)=>p(e)?Object.keys(e).every((r=>b(e[r],null==t?void 0:t[r]))):a(e)?a(t)?e.length===t.length&&e.every(((e,r)=>b(e,null==t?void 0:t[r]))):e.some((e=>y(e,t))):b(e,t),b=(e,t)=>p(e)||a(e)?y(e,t):c(e)?e(t):l(t)&&u(e)?e.test(t):e===t||[e,t].every(Number.isNaN),h=e=>e!=e||!e&&0!==e&&!1!==e||a(e)&&!e.length||p(e)&&!Object.keys(e).length,$=e=>!h(e),x=e=>B((t=>t>e)),N=e=>B((t=>t<e)),_=e=>B((t=>t>=e)),O=e=>B((t=>t<=e)),v=(e,t)=>B((r=>r>=e&&r<=t)),C=e=>w((t=>t.startsWith(e))),S=e=>w((t=>t.endsWith(e))),I=e=>function(e){return t=>(a(t)||l(t))&&e(t)}((t=>t.includes(e))),T=e=>!!e,E=e=>!e,j=e=>new Proxy({},{get:()=>e});function w(e){return t=>l(t)&&e(t)}function B(e){return t=>s(t)&&e(t)}}(0,c.exports),(o=c.exports)&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")&&o.default;const{match:s,when:u,otherwise:l}=c.exports,{getConstruct:p,getImportDeclaration:f}=a;function m(e){return"Identifier"===e?.type&&"CallExpression"===e?.parent?.type&&e?.parent?.callee===e}function g(e){return(t,r)=>{if(m(r))return!1;const n=function(e){return"Identifier"!==e?.type&&"MemberExpression"!==e?.parent?.type?null:s(e?.parent?.object)(u({type:"Identifier"})((e=>e?.name)),u({type:"CallExpression"})((e=>e?.callee?.name)),l(null))}(r);if(null===n)return!1;return e.replace("__CONSTRUCT__",p(t))===n}}const d=g("__CONSTRUCT__");var y={IdentifierIsAlreadyBigNumberMethod:d,makeIdentifierMembershipDetector:g,makeGlobalIdentifierFixer:function(e){const t={},r=Object.keys(e).filter((e=>{if(e.includes(".")){const[r,n]=e.split(".");return t[n]=g(r),!1}return!0}));return n=>i=>{if(d(n,i))return;const o=n.getSource(i);if(r.includes(i.name)&&m(i))return void n.report({node:i,message:`is '${o}' a financial calculation?`,fix:t=>{const r=e[i.name];return t.replaceText(i,r(n))}});const a=t[i.name];"function"==typeof a&&a(n,i)&&n.report({node:i.parent,message:`is '${o}' a financial calculation?`,fix:t=>{const r=e[i.name];return t.replaceText(i.parent,r(n))}})}},withImportDeclaration:function(e,t){const r=f(e);return"__IGNORE__"===r?t:n=>{const[i]=e.getAncestors(),o=i?.body?.find((e=>"ImportDeclaration"===e?.type&&e?.source?.value===r));if(o)return t(n)}}};const{makeSettingGetter:b,getConstruct:h}=a,{withImportDeclaration:$}=y,x=b("arithmetic",{"+":"plus","-":"minus","/":"dividedBy","*":"multipliedBy","**":"exponentiatedBy","%":"modulo"}),N=b("comparison",{"<":"isLessThan","<=":"isLessThanOrEqualTo","===":"isEqualTo","==":"isEqualTo",">=":"isGreaterThanOrEqualTo",">":"isGreaterThan"}),_=b("bitwise",{">>":"shiftedBy",">>>":"shiftedBy","<<":["${L}","shiftedBy","-${R}"]}),O=b("sum","sum"),v=b("supportsSum",!0),C=b("supportsBitwise",!0);function S(e){return"CallExpression"===e?.type&&"MemberExpression"===e?.callee?.type}function I(e,t){return function(e,t){return"CallExpression"===t?.type&&"Identifier"===t?.callee?.type&&t?.callee?.name===h(e)}(e,t)||function(e,t){return S(t)&&"Identifier"===t?.callee?.object?.type&&t?.callee?.object?.name===h(e)&&"Identifier"===t?.callee?.property?.type&&t?.callee?.property?.name===O(e)}(e,t)}const T=[];function E(e){try{if("BinaryExpression"!==e.type)return!0;if("+"!==e.operator)throw new Error("not a +");return E(e.left)&&E(e.right)}catch(e){return!1}}function j(e){const t=C(e),r={...x(e),...N(e)},n=Object.keys(r),i=_(e),o=Object.keys(i),a={...r,...i};function c(t,r,n){const i=a[r];return(function(e){return Array.isArray(e)&&3===e.length&&e.every((e=>"string"==typeof e))}(i)?function(t){return(r,n)=>t.map((t=>t.replace("__CONSTRUCT__",h(e)).replace("${L}",r).replace("${R}",n)))}(i):(e,t)=>[e,i,t])(t,n)}function s(e){const{type:t,value:r}=e||{};return"Literal"===t&&isNaN(r)}function u(e){return"MemberExpression"===e?.type&&"Identifier"===e?.property?.type&&"length"===e?.property?.name}return r=>{const i=n.includes(r.operator);if(i){const{left:e,right:t}=r;if(s(e)||s(t))return;if(u(e)||u(t))return}const a=o.includes(r.operator);if(!i&&!a)return;const l=e.getSource(r);if(a&&!t){const t=h(e);return void e.report({node:r,message:`is '${l}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})}const p=v(e)&&E(r),f=function(e,t){let r=t;for(;!I(e,r);){if(!S(r))return!1;r=r.callee.object}return!0}(e,r.left);T.push({node:r,original:l,summable:p&&!f,report:{node:r,message:`is '${l}' a financial calculation?`,fix:t=>{const{operator:n,left:i,right:o}=r,a=e.getSource(i),s=e.getSource(o);return f?t.replaceText(r,function(e,t,r){const[,n,i]=c(e,t,r);return`${e}.${n}(${i})`}(a,n,s)):t.replaceText(r,function(e,t,r,n){const i=h(e),[o,a,s]=c(t,r,n);return`${i}(${o}).${a}(${s})`}(e,a,n,s))}}})}}function w(e,t){return"BinaryExpression"!==t.type?[e.getSource(t)]:[...w(e,t.left),...w(e,t.right)].flat()}function B(e,t){const r=w(e,t).join(", ");return`${h(e)}.${O(e)}(${r})`}function R(e){return t=>{if(r=t,!T.find((({node:e})=>e===r)))return;var r;const{node:n,original:i,summable:o,report:a}=T.pop();o?T.length&&T[T.length-1]?.summable||e.report({node:n,message:`is '${i}' a financial calculation?`,fix:t=>t.replaceText(n,B(e,n))}):e.report(a)}}var A={create:e=>({BinaryExpression:$(e,j(e)),"BinaryExpression:exit":$(e,R(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript arithmetic with BigNumber methods",fixable:"code"}};const{makeSettingGetter:D,getConstruct:k}=a,{withImportDeclaration:F}=y,M={">>=":"shiftedBy",">>>=":"shiftedBy","<<=":["${L}","shiftedBy","-${R}"]},U=D("assignment",{"+=":"plus","-=":"minus","/=":"dividedBy","*=":"multipliedBy","**=":"exponentiatedBy","%=":"modulo",...M}),G=D("supportsBitwise",!0);function P(e){const t=G(e),r=U(e),n=Object.keys(r),i=Object.keys(M);function o(t,n,i){const o=r[n];return(function(e){return Array.isArray(e)&&3===e.length&&e.every((e=>"string"==typeof e))}(o)?function(t){return(r,n)=>t.map((t=>t.replace("__CONSTRUCT__",k(e)).replace("${L}",r).replace("${R}",n)))}(o):(e,t)=>[e,o,t])(t,i)}return r=>{if(!n.includes(r.operator))return;const a=i.includes(r.operator),c=e.getSource(r);if(a&&!t){const t=k(e);return void e.report({node:r,message:`is '${c}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})}const s=k(e);"Identifier"!==r?.left?.type&&r?.left?.name===s||e.report({node:r,message:`is '${c}' a financial calculation?`,fix:t=>{const{operator:n,left:i,right:a}=r,c=e.getSource(i),s=e.getSource(a);return t.replaceText(r,function(e,t,r,n){const i=k(e),[a,c,s]=o(t,r,n);return`${a} = ${i}(${a}).${c}(${s})`}(e,c,n,s))}})}}var q={create:e=>({AssignmentExpression:F(e,P(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript assignment-expressions with BigNumber equivalents",fixable:"code"}};const{getConstruct:L}=a,{makeGlobalIdentifierFixer:J,withImportDeclaration:W}=y,V=J({isNaN:e=>`${L(e)}.isNaN`,"Number.isNaN":e=>`${L(e)}.isNaN`});var H={create:e=>({Identifier:W(e,V(e))}),meta:{category:"Financial, Currency",description:"Replace isNaN with BigNumber equivalent",fixable:"code"}};const{makeSettingGetter:z,getConstruct:K}=a,{withImportDeclaration:Q}=y,X=z("math",{min:"minimum",max:"maximum",random:"random",abs:"absoluteValue",sign:["__CONSTRUCT__(${A}).comparedTo(0)"],sqrt:"squareRoot"});function Y(e){const t=X(e),r=Object.keys(t);return n=>{const{callee:i}=n;if("MemberExpression"!==i.type)return;if("Math"!==i?.object?.name)return;const o=i?.property?.name;if(!r.includes(o))return;const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r,n){const i=t[n],o=r.arguments.map((t=>e.getSource(t))).join(", "),a=K(e);if(Array.isArray(i)){if(1===i.length)return i[0].replace("__CONSTRUCT__",a).replace("${A}",o);if(2===i.length)return`${a}.${i[0]}(${i.slice(1).map((e=>e.replace("${A}",o)))})`}return`${a}.${i}(${o})`}(e,n,o))})}}var Z={create:e=>({CallExpression:Q(e,Y(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Math methods with BigNumber equivalents",fixable:"code"}};const{makeSettingGetter:ee,getConstruct:te}=a,{IdentifierIsAlreadyBigNumberMethod:re,withImportDeclaration:ne}=y,ie=ee("number",{parseFloat:["__CONSTRUCT__(${A})"],toExponential:"toExponential",toFixed:"decimalPlaces",toPrecision:"toPrecision",toString:"toString"});function oe(e){const t=ie(e),r=Object.keys(t);return n=>{const{callee:i}=n;if("MemberExpression"!==i.type)return;if("Identifier"!==i?.property?.type)return;const o=i?.property?.name;if(!r.includes(o))return;if(re(e,i?.property))return;const a=e.getSource(n);e.report({node:n,message:`is '${a}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r,n){const i=t[n],o=r.arguments.map((t=>e.getSource(t))).join(", "),a=te(e),c=e.getSource(r?.callee?.object);return"Number"===r?.callee?.object?.name&&Array.isArray(i)&&1===i.length?i[0].replace("__CONSTRUCT__",a).replace("${O}",c).replace("${A}",o):`${a}(${c}).${i}(${o})`}(e,n,o))})}}var ae={create:e=>({CallExpression:ne(e,oe(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Number.prototype methods with BigNumber equivalents",fixable:"code"}};const{getConstruct:ce}=a,{makeGlobalIdentifierFixer:se,withImportDeclaration:ue}=y,le=se({parseFloat:e=>ce(e)});var pe={create:e=>({Identifier:ue(e,le(e))}),meta:{category:"Financial, Currency",description:"Replace parseFloat with BigNumber equivalent",fixable:"code"}};const{makeSettingGetter:fe,getConstruct:me}=a,{withImportDeclaration:ge}=y,de={floor:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n})",ceil:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\n})",round:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_HALF_EVEN\n})"},ye=fe("supportsRound",!1),be=fe("rounding",de);function he(e){const t=Object.keys(de),r=be(e),n=ye(e);return i=>{const{callee:o}=i;if("MemberExpression"!==o.type)return;if("Math"!==o?.object?.name)return;const a=o?.property?.name;if(!t.includes(a))return;const c=e.getSource(i);n?e.report({node:i,message:`is '${c}' a financial calculation?`,fix:t=>t.replaceText(i,function(e,t,n){const i=r[n],o=t.arguments.map((t=>e.getSource(t))).join(", "),a=me(e);if(Array.isArray(i)){if(1===i.length)return i[0].replace("__CONSTRUCT__",a).replace("${A}",o);if(2===i.length)return`${a}.${i[0]}(${i.slice(1).map((e=>e.replace("${A}",o)))})`}return`${a}.${i}(${o})`}(e,i,a))}):e.report({node:i,message:`is '${c}' a financial calculation? If so, use the global constructor setting:\n\n${r[a]}\n`})}}function $e(e){const t=be(e),r=ye(e);return n=>{if("~"!==n?.operator)return;if("~"!==n?.argument?.operator)return;const i=e.getSource(n);r?e.report({node:n,message:`is '${i}' a financial calculation?`,fix:r=>r.replaceText(n,function(e,r){const n=t.floor,i=e.getSource(r?.argument?.argument),o=me(e);if(Array.isArray(n)){if(1===n.length)return n[0].replace("__CONSTRUCT__",o).replace("${A}",i);if(2===n.length)return`${o}.${n[0]}(${n.slice(1).map((e=>e.replace("${A}",i)))})`}return`${o}.${n}(${i})`}(e,n))}):e.report({node:n,message:`is '${i}' a financial calculation? If so, use the global constructor setting:\n\n${t.floor}\n`})}}var xe={rules:{arithmetic:A,assignment:q,isNaN:H,math:Z,number:ae,parseFloat:pe,rounding:{create:e=>({CallExpression:ge(e,he(e)),UnaryExpression:ge(e,$e(e))}),meta:{category:"Financial, Currency",description:"Warn against using JavaScript Math.round|ceil|floor methods, or offer replacements",fixable:"code"}}},configs:{recommended:{rules:{"big-number-rules/arithmetic":"warn","big-number-rules/assignment":"warn","big-number-rules/isNaN":"warn","big-number-rules/math":"warn","big-number-rules/number":"warn","big-number-rules/parseFloat":"warn","big-number-rules/rounding":"warn"}}}};module.exports=xe;
