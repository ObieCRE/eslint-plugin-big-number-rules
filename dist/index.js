/*
 * eslint-plugin-big-number-rules
 * v1.7.4
 * https://github.com/shuckster/eslint-plugin-big-number-rules
 * License: MIT
 */
"use strict";var e={isPojo:function(e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype}};const{isPojo:t}=e;function r(e="construct",r="BigNumber"){return n=>{const{settings:i}=n,o=i["big-number-rules"]?.[e]??r;return t(r)&&t(o)&&r!==o?{...r,...o}:o}}const n=r("construct","BigNumber"),i=r("importDeclaration","__IGNORE__");var o,a={makeSettingGetter:r,isPojo:t,getConstruct:n,getImportDeclaration:i},s={exports:{}};!function(e,t){var r=Object.defineProperty;((e,t)=>{for(var n in(e=>{r(e,"__esModule",{value:!0})})(e),t)r(e,n,{get:t[n],enumerable:!0})})(t,{against:()=>g,defined:()=>b,empty:()=>h,endsWith:()=>O,falsy:()=>I,gt:()=>x,gte:()=>_,inRange:()=>E,includes:()=>S,isArray:()=>a,isFunction:()=>s,isNumber:()=>c,isPojo:()=>p,isRegExp:()=>l,isString:()=>u,lt:()=>$,lte:()=>N,match:()=>m,not:()=>w,otherwise:()=>f,spread:()=>v,startsWith:()=>C,truthy:()=>T,when:()=>d});var n=Object.prototype,i=n.toString,o=e=>typeof e,a=e=>Array.isArray(e),s=e=>"function"===o(e),c=e=>"number"===o(e),l=e=>e instanceof RegExp,u=e=>"string"===o(e),p=e=>!(null===e||!(e=>"object"===o(e)&&null!==e)(e)||(e=>"[object Arguments]"===i.call(e))(e))&&Object.getPrototypeOf(e)===n;function m(e){return(...t)=>g(...t)(e)}function g(...e){let t;return r=>e.find((e=>{let n=e(r),{matched:i,value:o}=n||{};return[i,o].every(s)?i(r)&&(t=o(r),!0):n&&(t=n)}))&&t}var f=e=>t=>({matched:()=>!0,value:()=>s(e)?e(t):e}),d=e=>t=>r=>({matched:()=>y(e,r),value:()=>s(t)?u(r)&&l(e)?t(r.match(e)):t(r):t}),y=(e,t)=>p(e)?Object.keys(e).every((r=>y(e[r],null==t?void 0:t[r]))):a(e)?a(t)?e.length===t.length&&e.every(((e,r)=>y(e,null==t?void 0:t[r]))):e.some((e=>y(e,t))):s(e)?e(t):u(t)&&l(e)?e.test(t):e===t||[e,t].every(Number.isNaN),h=e=>e!=e||!e&&0!==e&&!1!==e||a(e)&&!e.length||p(e)&&!Object.keys(e).length,b=e=>!h(e),x=e=>j((t=>t>e)),$=e=>j((t=>t<e)),_=e=>j((t=>t>=e)),N=e=>j((t=>t<=e)),E=(e,t)=>j((r=>r>=e&&r<=t)),C=e=>R((t=>t.startsWith(e))),O=e=>R((t=>t.endsWith(e))),S=e=>function(e){return t=>(a(t)||u(t))&&e(t)}((t=>t.includes(e))),T=e=>!!e,I=e=>!e,w=e=>t=>!y(e,t),v=e=>new Proxy({},{get:()=>e});function R(e){return t=>u(t)&&e(t)}function j(e){return t=>c(t)&&e(t)}}(0,s.exports),(o=s.exports)&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")&&o.default;const{match:c,when:l,otherwise:u}=s.exports,{getConstruct:p,getImportDeclaration:m}=a;function g(e){return"Identifier"===e?.type&&"CallExpression"===e?.parent?.type&&e?.parent?.callee===e}function f(e){return(t,r)=>{if(g(r))return!1;const n=function(e){return"Identifier"!==e?.type&&"MemberExpression"!==e?.parent?.type?null:c(e?.parent?.object)(l({type:"Identifier"})((e=>e?.name)),l({type:"CallExpression"})((e=>e?.callee?.name)),u(null))}(r);if(null===n)return!1;return e.replace("__CONSTRUCT__",p(t))===n}}const d=f("__CONSTRUCT__");var y={IdentifierIsAlreadyBigNumberMethod:d,makeIdentifierMembershipDetector:f,makeGlobalIdentifierFixer:function(e){const t={},r=Object.keys(e).filter((e=>{if(e.includes(".")){const[r,n]=e.split(".");return t[n]=f(r),!1}return!0}));return n=>i=>{if(d(n,i))return;const o=n.getSource(i);if(r.includes(i.name)&&g(i))return void n.report({node:i,message:`is '${o}' a financial calculation?`,fix:t=>{const r=e[i.name];return t.replaceText(i,r(n))}});const a=t[i.name];"function"==typeof a&&a(n,i)&&n.report({node:i.parent,message:`is '${o}' a financial calculation?`,fix:t=>{const r=e[i.name];return t.replaceText(i.parent,r(n))}})}},withImportDeclaration:function(e,t){const r=m(e);return"__IGNORE__"===r?t:n=>{const[i]=e.getAncestors(),o=i?.body?.find((e=>"ImportDeclaration"===e?.type&&e?.source?.value===r));if(o)return t(n)}},StringFromArguments:function(e){return t=>t.arguments.map((t=>e.getSource(t))).join(", ")}};const{makeSettingGetter:h,getConstruct:b}=a,{withImportDeclaration:x}=y,$=h("arithmetic",{"+":"plus","-":"minus","/":"dividedBy","*":"multipliedBy","**":"exponentiatedBy","%":"modulo"}),_=h("comparison",{"<":"isLessThan","<=":"isLessThanOrEqualTo","===":"isEqualTo","==":"isEqualTo","!==":["__NEGATION__","${L}","isEqualTo","${R}"],"!=":["__NEGATION__","${L}","isEqualTo","${R}"],">=":"isGreaterThanOrEqualTo",">":"isGreaterThan"}),N=h("bitwise",{">>":"shiftedBy",">>>":"shiftedBy","<<":["${L}","shiftedBy","-${R}"]}),E=h("sum","sum"),C=h("supportsSum",!0),O=h("supportsBitwise",!0);function S(e){return"CallExpression"===e?.type&&"MemberExpression"===e?.callee?.type}function T(e,t){return function(e,t){return"CallExpression"===t?.type&&"Identifier"===t?.callee?.type&&t?.callee?.name===b(e)}(e,t)||function(e,t){return S(t)&&"Identifier"===t?.callee?.object?.type&&t?.callee?.object?.name===b(e)&&"Identifier"===t?.callee?.property?.type&&t?.callee?.property?.name===E(e)}(e,t)}const I=[];function w(e){try{if("BinaryExpression"!==e.type)return!0;if("+"!==e.operator)throw new Error("not a +");return w(e.left)&&w(e.right)}catch(e){return!1}}function v(e){const t=O(e),r={...$(e),..._(e)},n=Object.keys(r),i=N(e),o=Object.keys(i),a={...r,...i};function s(t,r,n){const i=a[r],o=function(e){return Array.isArray(e)&&[3,4].includes(e.length)&&e.every((e=>"string"==typeof e))}(i)?function(t){return(r,n)=>t.map((t=>t.replace("__CONSTRUCT__",b(e)).replace("${L}",r).replace("${R}",n)))}(i):(e,t)=>[e,i,t],s=o(t,n);3===s.length&&s.unshift("");const[c,...l]=s;return["__NEGATION__"===c,...l]}function c(e){const{type:t,value:r}=e||{};return"Literal"===t&&isNaN(r)}function l(e){return"MemberExpression"===e?.type&&"Identifier"===e?.property?.type&&"length"===e?.property?.name}return r=>{const i=n.includes(r.operator);if(i){const{left:e,right:t}=r;if(c(e)||c(t))return;if(l(e)||l(t))return}const a=o.includes(r.operator);if(!i&&!a)return;const u=e.getSource(r);if(a&&!t){const t=b(e);return void e.report({node:r,message:`is '${u}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})}const p=C(e)&&w(r),m=function(e,t){let r=t;for(;!T(e,r);){if(!S(r))return!1;r=r.callee.object}return!0}(e,r.left);I.push({node:r,original:u,summable:p&&!m,report:{node:r,message:`is '${u}' a financial calculation?`,fix:t=>{const{operator:n,left:i,right:o}=r,a=e.getSource(i),c=e.getSource(o);return m?t.replaceText(r,function(e,t,r){const[n,,i,o]=s(e,t,r);return`${n?"!":""}${e}.${i}(${o})`}(a,n,c)):t.replaceText(r,function(t,r,n){const i=b(e),[o,a,c,l]=s(t,r,n);return`${o?"!":""}${i}(${a}).${c}(${l})`}(a,n,c))}}})}}function R(e,t){return"BinaryExpression"!==t.type?[e.getSource(t)]:[...R(e,t.left),...R(e,t.right)].flat()}function j(e,t){const r=R(e,t).join(", ");return`${b(e)}.${E(e)}(${r})`}function B(e){return t=>{if(r=t,!I.find((({node:e})=>e===r)))return;var r;const{node:n,original:i,summable:o,report:a}=I.pop();o?I.length&&I[I.length-1]?.summable||e.report({node:n,message:`is '${i}' a financial calculation?`,fix:t=>t.replaceText(n,j(e,n))}):e.report(a)}}var A={create:e=>({BinaryExpression:x(e,v(e)),"BinaryExpression:exit":x(e,B(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript arithmetic with BigNumber methods",fixable:"code"}};const{against:D,when:F,not:k,match:M,otherwise:G}=s.exports,{makeSettingGetter:U,getConstruct:q}=a,{withImportDeclaration:L}=y,P={"+=":"plus","-=":"minus","/=":"dividedBy","*=":"multipliedBy","**=":"exponentiatedBy","%=":"modulo"},J={">>=":"shiftedBy",">>>=":"shiftedBy","<<=":["${L}","shiftedBy","-${R}"]},W=e=>Array.isArray(e)&&3===e.length,V=U("assignment",{...P,...J}),H=U("supportsBitwise",!0);function z(e){const t=q(e),r=V(e),n=Object.keys(P),i=Object.keys(J),o=H(e),a=n=>{const i=e.getSource(n);e.report({node:n,message:`is '${i}' a financial calculation?`,fix:i=>{const o=e.getSource(n.left),a=e.getSource(n.right),[s,c,l]=M(r[n.operator])(F(W)((e=>e.map((e=>e.replace("__CONSTRUCT__",t).replace("${L}",o).replace("${R}",a))))),G((e=>[o,e,a])));return i.replaceText(n,`${s} = ${t}(${s}).${c}(${l})`)}})},s=a,c=k({type:"Identifier",name:t});return D(F({type:"AssignmentExpression",operator:n,left:c})(s),F({type:"AssignmentExpression",operator:i,left:c})((r=>{if(o)return a(r);const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation? If so, bitwise methods are not supported by ${t}\n`})})))}var K={create:e=>({AssignmentExpression:L(e,z(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript assignment-expressions with BigNumber equivalents",fixable:"code"}};const{against:Q,when:X}=s.exports,{getConstruct:Y}=a,{withImportDeclaration:Z,StringFromArguments:ee}=y;function te(e){const t=t=>{const r=e.getSource(t);e.report({node:t,message:`is '${r}' a financial calculation?`,fix:r=>{const n=Y(e),i=ee(e)(t);return r.replaceText(t,`${n}(${i}).isNaN()`)}})};return Q(X({type:"CallExpression",callee:{type:"Identifier",name:"isNaN"}})(t),X({type:"CallExpression",callee:{type:"MemberExpression",object:{type:"Identifier",name:"Number"},property:{type:"Identifier",name:"isNaN"}}})(t))}var re={create:e=>({CallExpression:Z(e,te(e))}),meta:{category:"Financial, Currency",description:"Replace isNaN with BigNumber equivalent",fixable:"code"}};const{match:ne,when:ie,against:oe,otherwise:ae}=s.exports,{makeSettingGetter:se,getConstruct:ce}=a,{withImportDeclaration:le,StringFromArguments:ue}=y,pe=se("math",{min:"minimum",max:"maximum",random:"random",abs:"absoluteValue",sign:["__CONSTRUCT__(${A}).comparedTo(0)"],sqrt:"squareRoot"});function me(e){const t=pe(e),r=Object.keys(t);return oe(ie({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:r}}})((r=>{const n=e.getSource(r);e.report({node:r,message:`is '${n}' a financial calculation?`,fix:n=>{const i=ce(e),o=r.callee.property.name,a=ue(e)(r);return n.replaceText(r,ne(t[o])(ie({length:1})((e=>e[0].replace("__CONSTRUCT__",i).replace("${A}",a))),ie({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",a)));return`${i}.${t}(${r})`})),ae((e=>`${i}.${e}(${a})`))))}})})))}var ge={create:e=>({CallExpression:le(e,me(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Math methods with BigNumber equivalents",fixable:"code"}};const{match:fe,when:de,against:ye,otherwise:he}=s.exports,{makeSettingGetter:be,getConstruct:xe}=a,{IdentifierIsAlreadyBigNumberMethod:$e,withImportDeclaration:_e,StringFromArguments:Ne}=y,Ee=be("number",{parseFloat:["__CONSTRUCT__(${A})"],toExponential:"toExponential",toFixed:"decimalPlaces",toPrecision:"toPrecision",toString:"toString"});function Ce(e){const t=Ee(e),r=Object.keys(t);return ye(de({type:"CallExpression",callee:{type:"MemberExpression",property:{type:"Identifier",name:r}}})((r=>{const{property:n,object:i}=r.callee;if($e(e,n))return;const o=e.getSource(r);e.report({node:r,message:`is '${o}' a financial calculation?`,fix:o=>{const a=xe(e),s=e.getSource(i),c=Ne(e)(r);return o.replaceText(r,fe({node:r,method:t[n.name]})(de({node:{callee:{object:{name:"Number"}}},method:Array.isArray})((({method:e})=>e[0].replace("__CONSTRUCT__",a).replace("${O}",s).replace("${A}",c))),he((({method:e})=>`${a}(${s}).${e}(${c})`))))}})})))}var Oe={create:e=>({CallExpression:_e(e,Ce(e))}),meta:{category:"Financial, Currency",description:"Replace JavaScript Number.prototype methods with BigNumber equivalents",fixable:"code"}};const{getConstruct:Se}=a,{makeGlobalIdentifierFixer:Te,withImportDeclaration:Ie}=y,we=Te({parseFloat:e=>Se(e)});var ve={create:e=>({Identifier:Ie(e,we(e))}),meta:{category:"Financial, Currency",description:"Replace parseFloat with BigNumber equivalent",fixable:"code"}};const{against:Re,when:je,match:Be,otherwise:Ae}=s.exports,{makeSettingGetter:De,getConstruct:Fe}=a,{withImportDeclaration:ke}=y,Me={floor:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n})",ceil:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\n})",round:"BigNumber.set({\n  ROUNDING_MODE: BigNumber.ROUND_HALF_EVEN\n})"},Ge=De("supportsRound",!1),Ue=De("rounding",Me);function qe(e){const t=Object.keys(Me),r=Ue(e),n=Ge(e);return Re(je({type:"CallExpression",callee:{type:"MemberExpression",object:{name:"Math"},property:{name:t}}})((t=>{const i=e.getSource(t),o=t.callee.property.name;n?e.report({node:t,message:`is '${i}' a financial calculation?`,fix:n=>{const i=Fe(e),a=r[o],s=t.arguments.map((t=>e.getSource(t))).join(", ");return n.replaceText(t,Be(a)(je({length:1})((e=>e[0].replace("__CONSTRUCT__",i).replace("${A}",s))),je({length:2})((e=>{const t=e[0],r=e.slice(1).map((e=>e.replace("${A}",s)));return`${i}.${t}(${r})`})),Ae((e=>`${i}.${e}(${s})`))))}}):e.report({node:t,message:`is '${i}' a financial calculation? If so, use the global constructor setting:\n\n${r[o]}\n`})})))}function Le(e){const t=Ue(e),r=Ge(e);return Re(je({type:"UnaryExpression",operator:"~",argument:{operator:"~"}})((n=>{const i=e.getSource(n),o=t.floor;r?e.report({node:n,message:`is '${i}' a financial calculation?`,fix:t=>{const r=e.getSource(n?.argument?.argument),i=Fe(e);return t.replaceText(n,Be(o)(je({length:1})((e=>e[0].replace("__CONSTRUCT__",i).replace("${A}",r))),je({length:2})((e=>{const t=e[0],n=e.slice(1).map((e=>e.replace("${A}",r)));return`${i}.${t}(${n})`})),Ae((e=>`${i}.${e}(${r})`))))}}):e.report({node:n,message:`is '${i}' a financial calculation? If so, use the global constructor setting:\n\n${o}\n`})})))}var Pe={rules:{arithmetic:A,assignment:K,isNaN:re,math:ge,number:Oe,parseFloat:ve,rounding:{create:e=>({CallExpression:ke(e,qe(e)),UnaryExpression:ke(e,Le(e))}),meta:{category:"Financial, Currency",description:"Warn against using JavaScript Math.round|ceil|floor methods, or offer replacements",fixable:"code"}}},configs:{recommended:{rules:{"big-number-rules/arithmetic":"warn","big-number-rules/assignment":"warn","big-number-rules/isNaN":"warn","big-number-rules/math":"warn","big-number-rules/number":"warn","big-number-rules/parseFloat":"warn","big-number-rules/rounding":"warn"}}}};module.exports=Pe;
